[{"C:\\Users\\aamir\\rbpgr\\src\\index.js":"1","C:\\Users\\aamir\\rbpgr\\src\\reducers.js":"2","C:\\Users\\aamir\\rbpgr\\src\\registerServiceWorker.js":"3","C:\\Users\\aamir\\rbpgr\\src\\containers\\App.js":"4","C:\\Users\\aamir\\rbpgr\\src\\constants.js":"5","C:\\Users\\aamir\\rbpgr\\src\\actions.js":"6","C:\\Users\\aamir\\rbpgr\\src\\components\\Scroll.js":"7","C:\\Users\\aamir\\rbpgr\\src\\components\\CardList.js":"8","C:\\Users\\aamir\\rbpgr\\src\\components\\ErrorBoundry.js":"9","C:\\Users\\aamir\\rbpgr\\src\\components\\SearchBox.js":"10","C:\\Users\\aamir\\rbpgr\\src\\components\\Header.js":"11","C:\\Users\\aamir\\rbpgr\\src\\components\\Card.js":"12","C:\\Users\\aamir\\rbpgr\\src\\components\\CounterButton.js":"13","C:\\Users\\aamir\\rbpgr\\src\\reportWebVitals.js":"14","C:\\Users\\aamir\\rbpgr\\src\\serviceWorkerRegistration.js":"15"},{"size":1313,"mtime":1608821547629,"results":"16","hashOfConfig":"17"},{"size":979,"mtime":1608404182437,"results":"18","hashOfConfig":"17"},{"size":4129,"mtime":1606524117652,"results":"19","hashOfConfig":"17"},{"size":3635,"mtime":1608820237997,"results":"20","hashOfConfig":"17"},{"size":250,"mtime":1608404178958,"results":"21","hashOfConfig":"17"},{"size":591,"mtime":1608331467520,"results":"22","hashOfConfig":"17"},{"size":266,"mtime":1608072017205,"results":"23","hashOfConfig":"17"},{"size":460,"mtime":1608742426588,"results":"24","hashOfConfig":"17"},{"size":416,"mtime":1606663914033,"results":"25","hashOfConfig":"17"},{"size":410,"mtime":1608821985159,"results":"26","hashOfConfig":"17"},{"size":381,"mtime":1608745700258,"results":"27","hashOfConfig":"17"},{"size":355,"mtime":1608310870156,"results":"28","hashOfConfig":"17"},{"size":813,"mtime":1608746111826,"results":"29","hashOfConfig":"17"},{"size":364,"mtime":499162500000,"results":"30","hashOfConfig":"17"},{"size":5064,"mtime":499162500000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"agj9d8",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"C:\\Users\\aamir\\rbpgr\\src\\index.js",["67"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport {createLogger} from 'redux-logger';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {searchRobots, requestRobots, } from './reducers';\r\nimport 'tachyons'; \r\n\r\n \r\n\r\n\r\nconst logger = createLogger()\r\n\r\nconst rootReducer = combineReducers({searchRobots,requestRobots })\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nReactDOM.render( <Provider store ={store}>\r\n\t\t\t\r\n\t\t\t\t<App />\r\n\t\t\t\t\r\n\t\t\t\t</Provider>, document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["68","69"],"C:\\Users\\aamir\\rbpgr\\src\\reducers.js",[],"C:\\Users\\aamir\\rbpgr\\src\\registerServiceWorker.js",[],["70","71"],"C:\\Users\\aamir\\rbpgr\\src\\containers\\App.js",["72","73","74"],"import React, { useState, useEffect } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport Header from '../components/Header';\r\n\r\nimport './App.css';\r\n//import {connect} from 'react-redux'; import connect whn using classes\r\nimport { useDispatch, useSelector } from 'react-redux' // only with redux hooks\r\nimport { setSearchField, requestRobots } from '../actions'\r\n\r\n\r\n\r\n// const mapStateToProps = state => { // Applying state with redux classes\r\n//   return{\r\n//     searchField: state.searchRobots.searchField,\r\n     \r\n//       robots: state.requestRobots.robots,\r\n//        isPending: state.requestRobots.isPending,\r\n//       error: state.requestRobots.error\r\n//     }\r\n// }\r\n\r\n\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch() \r\n    const { searchField } = useSelector((state) => state.searchRobots) // applying state with redux hooks\r\n    const {robots, isPending, isFailed}=  useSelector((state) => state.requestRobots )\r\n\r\n    \r\n  // class App extends Component{  // applying state with classes\r\n  // constructor() { // class\r\n  //   super()\r\n  //   this.state = {\r\n  //     robots: [],\r\n  //     searchfield: ''\r\n  //   }\r\n  // }\r\n\r\n  // const [robots, setRobots] = useState([]) // applying states with hooks  \r\n   //const [searchfield, setSearchfield] = useState('') \r\n  const [count, setCount]= useState(0)\r\n\r\n   // componentDidMount() { // class function runs when compenent loads\r\n  //   fetch('https://jsonplaceholder.typicode.com/users')\r\n  //     .then(response=> response.json())\r\n  //     .then(users => {this.setState({ robots: users})});\r\n  // }\r\n\r\n  // const mapDispatchToProps = (dispatch) =>{ // redux class function applies dispatch function to below class functions to fetch\r\n//   return {\r\n//   onSearchChange: (event)=> dispatch(setSearchField(event.target.value)),\r\n//   onRequestRobots: () =>  dispatch(requestRobots())\r\n//   } \r\n// }\r\n\r\n  const onRequestRobots = () =>{ //  redux hook function fetches the  funtion with dispatch \r\n    dispatch(requestRobots())  \r\n  }\r\n\r\n  useEffect(()=>{ //  hook function loads when component loads \r\n     onRequestRobots()\r\n      },[]) // empty array ensures function only runs once  when called.\r\n\r\n  //  componentDidMount() {  redux class function runs when component loads \r\n  //   this.props.onRequestRobots()\r\n  // }\r\n\r\n   useEffect(()=>{\r\n      console.log(count)\r\n       },[count]) // appying count state in array ensures funtion runs when state changes\r\n\r\nconst onSearchChange = (event) => { // search change funtion with hooks redux\r\n  dispatch(setSearchField( event.target.value ))\r\n  }\r\n\r\n\r\n  // const onSearchChange = (event) => { // hooks onsearhhangefunction \r\n  // setSearchfield( event.target.value )\r\n  // }\r\n\r\n // const {searchField, onSearchChange, robots, isPending} = this.props; // assigning with redux classes\r\nconst filteredRobots = robots.filter(robot =>{\r\n    return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    })\r\n      \r\n\r\n   return (\r\n      <div className='tc'>\r\n        <Header />\r\n        <SearchBox searchChange={onSearchChange}/>\r\n        <Scroll>\r\n          { isPending ? <h1>Loading</h1> :\r\n            <ErrorBoundry>\r\n              <CardList robots={filteredRobots} />\r\n            </ErrorBoundry>\r\n          }\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nexport default App;\r\n//export default connect(mapStateToProps, mapDispatchToProps)(App); // how to export using redux classed and how to \r\n// connect redux funtions to app ","C:\\Users\\aamir\\rbpgr\\src\\constants.js",[],"C:\\Users\\aamir\\rbpgr\\src\\actions.js",[],"C:\\Users\\aamir\\rbpgr\\src\\components\\Scroll.js",[],"C:\\Users\\aamir\\rbpgr\\src\\components\\CardList.js",[],"C:\\Users\\aamir\\rbpgr\\src\\components\\ErrorBoundry.js",[],"C:\\Users\\aamir\\rbpgr\\src\\components\\SearchBox.js",[],"C:\\Users\\aamir\\rbpgr\\src\\components\\Header.js",[],"C:\\Users\\aamir\\rbpgr\\src\\components\\Card.js",[],"C:\\Users\\aamir\\rbpgr\\src\\components\\CounterButton.js",[],["75","76"],"C:\\Users\\aamir\\rbpgr\\src\\reportWebVitals.js",[],"C:\\Users\\aamir\\rbpgr\\src\\serviceWorkerRegistration.js",[],{"ruleId":"77","severity":1,"message":"78","line":17,"column":7,"nodeType":"79","messageId":"80","endLine":17,"endColumn":13},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"81","replacedBy":"85"},{"ruleId":"83","replacedBy":"86"},{"ruleId":"77","severity":1,"message":"87","line":30,"column":31,"nodeType":"79","messageId":"80","endLine":30,"endColumn":39},{"ruleId":"77","severity":1,"message":"88","line":44,"column":17,"nodeType":"79","messageId":"80","endLine":44,"endColumn":25},{"ruleId":"89","severity":1,"message":"90","line":65,"column":9,"nodeType":"91","endLine":65,"endColumn":11,"suggestions":"92"},{"ruleId":"81","replacedBy":"93"},{"ruleId":"83","replacedBy":"94"},"no-unused-vars","'logger' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["95"],"no-negated-in-lhs",["96"],["95"],["96"],"'isFailed' is assigned a value but never used.","'setCount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onRequestRobots'. Either include it or remove the dependency array.","ArrayExpression",["97"],["95"],["96"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [onRequestRobots]",{"range":"100","text":"101"},[2274,2276],"[onRequestRobots]"]